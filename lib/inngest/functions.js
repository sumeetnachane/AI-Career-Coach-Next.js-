// ye code Ek cron job ki tarah kaam krta hai jo har sunday raat ko 12 baje (midnight) apne aap run hota hai our database me industries ke liye AI-generated insights create/update karta hai.
// means every week sabhi industries ka data fresh kar deta hai, jaise salary trends, growth rate, top skills, market outlook vagera

//npx inngest-cli@latest dev run this command for local development
// This will run the inngest CLI in dev mode, allowing you to test your functions locally
// and see the events being processed in real-time.
// this is for data Fetch it every Single week
//  cron: "0 0 * * 0" -> 0 - minute(0-59), 0 - hour(0-23), * - day of month(1-31), * - month(1-12) 0 - day of week(0-6, 0 is Sunday)
// This will run every single sunday at midnight

import { GoogleGenerativeAI } from "@google/generative-ai";
import { db } from "../prisma";
import { inngest } from "./client";

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
const model = genAI.getGenerativeModel({
  model: "gemini-1.5-flash",
});
export const generateIndustryInsights = inngest.createFunction(
  { name: "Generate Industry Insights" },
  { cron: "0 0 * * 0" }, // Every Sunday at midnight(function run)
  //refetch all of the industries here
  async ({ step }) => {
    const industries = await step.run("Fetch industries", async () => {
      return await db.industryInsight.findMany({
        select: { industry: true },
      });
    });
    //now provide api key in client.js file ( credentials:)
    for (const { industry } of industries) {
      const prompt = `
        Analyze the current state of the ${industry} industry and provide insights in ONLY the following JSON format without any additional notes or explaination:
        {
          "salaryRanges" : [
            {"role": "string", "min": number, "max": number, "median": number, "location": "string" }
          ],
          "growthRate": number,
          "demandLevel": "HIGH" | "MEDIUM" | "LOW",
          "topSkills": ["skill1", "skill2"],
          "marketOutlook": "POSITIVE" | "NEUTRAL" | "NEGATIVE",
          "keyTrends": ["trend1", "trend2"],
          "recommendedSkills": ["skill1], "skill2"]
        } 

        IMPORTANT: Return ONLY the JSON. No additionally text, notes, or markdown formatting.

        Including at least 5 common roles for salary ranges.
        Growth rate should pe percentage.
        Include at least 5 skills and trends.
      `;

      const res = await step.ai.wrap(
        "gemini",
        async (p) => {
          return await model.generateContent(p);
        },
        prompt
      );

      const text = res.response.candidates[0].content.parts[0].text || ""; // this line give u actual output (that generated by ai gemini) if nothings comes then fall back empty string ("")
      const cleanedText = text.replace(/```(?:json)?\n?/g, "").trim();
      const insights = JSON.parse(cleanedText);

      await step.run(`Update ${industry} insights`, async () => {
        await db.industryInsight.update({
          where: { industry },
          data: {
            ...insights,
            lastUpdated: new Date(),
            nextUpdate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
          },
        });
      });
    }
  }
);
